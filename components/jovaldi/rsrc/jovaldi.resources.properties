product.name=jOVAL Definition Interpreter
ERROR_CHECKSUM_MISMATCH=ERROR: The file {0} does not match the provided MD5 hash.
ERROR_INPUTFILE=No such file: {0}
ERROR_INVALID_LOG_LEVEL=Invalid log level: {0}
ERROR_INVALID_SCHEMADIR=Invalid schema directory: {0}
ERROR_JAVAVERSION=You are using Java runtime version {0}; version {1} or greater is required.
ERROR_NOCHECKSUM=You must supply the MD5 hash for the xmlfile or use the -m command to skip the MD5 check.
ERROR_NOCREDENTIAL=You must supply a credential string, or use the -i command to input data from a file.
ERROR_NOHOSTNAME=You must supply a target host, or use the -i command to input data from a file.
ERROR_CONNECT=>>> ERROR - Failed to connect to host: {0}
ERROR_UNKNOWN_HOST=>>> ERROR - No such host: {0}
ERROR_PLUGIN=ERROR: No plugin was created for scanning/evaluation.
ERROR_NOSUCHFILE=ERROR: The file {0} does not exist.
ERROR_PLUGIN_CONFIG=WARNING: There was a problem with the configuration passed to the plugin:\
\n  {0}\
\n\
\nAdditional details may appear in the log file:\
\n  {1}
ERROR_PLUGIN_NOT_FOUND=ERROR: The plugin "{0}" could not be found.
ERROR_PLUGIN_DIR_NOT_FOUND=ERROR: Not a directory: {0}
ERROR_SCHEMA_VERSION=ERROR: Incompatible schema version - {0}
ERROR_SCHEMATRON=ERROR: Schematron validation failed with {0} errors; first={1}
ERROR_SCHEMATRON_ERROR=Schematron validation error {0}: {1}
ERROR_VALIDATION=ERROR: Problem with XML validation - {0}
ERROR_OVAL=ERROR: Encountered unrecoverable error in OVAL content (see below)
ERROR_FATAL=***>>> FATAL ERROR <<<***
WARNING_ARG=WARNING: unknown argument - {0}
MESSAGE_START_TIME=Start Time: {0,date,EEE MMM dd HH:mm:ss yyyy}
MESSAGE_PRODUCT={0}
MESSAGE_VERSION=Version: {0}
MESSAGE_BUILD_DATE=Build date: {0}
MESSAGE_COPYRIGHT=Copyright (c) 2011-2013 - jOVAL.org
MESSAGE_DIVIDER=----------------------------------------------------
MESSAGE_PLUGIN_NAME=Plugin: {0}
MESSAGE_PLUGIN_VERSION=Version: {0}
MESSAGE_PLUGIN_COPYRIGHT={0}
MESSAGE_OBJECT_PHASE=\ ** gathering data for the OVAL definitions.
MESSAGE_OBJECT=\      Collecting object: {0}
MESSAGE_OBJECT_LOG=Collecting object: {0}
MESSAGE_OBJECTS_DONE=\      Collecting object:  FINISHED
MESSAGE_DEFINITION_PHASE=\ ** running the OVAL Definition analysis.
MESSAGE_DEFINITION=\      Analyzing definition: {0}
MESSAGE_DEFINITIONS_DONE=\      Analyzing definition:  FINISHED
MESSAGE_CREATING_SYSTEMCHARACTERISTICS=\ ** creating a new OVAL System Characteristics file.
MESSAGE_SAVING_SYSTEMCHARACTERISTICS=\ ** saving data model to {0}.
MESSAGE_PARSING_FILE=\ ** parsing {0}
MESSAGE_VALIDATING_XML=\     - validating xml schema.
MESSAGE_SCHEMA_VERSION=\     - Schema version - {0}
MESSAGE_SCHEMA_VERSION_CHECK=\ ** checking schema version
MESSAGE_RESULTS=\ ** OVAL definition results.
MESSAGE_DEFINITION_TABLE_HEAD=\    OVAL Id                                 Result
MESSAGE_DEFINITION_TABLE_DIV=\    -------------------------------------------------------
MESSAGE_DEFINITION_TABLE_ROW=\    {0}{1}
MESSAGE_DEFINITIONS_EVALUATED=\ ** finished evaluating OVAL definitions.
MESSAGE_SAVING_RESULTS=\ ** saving OVAL results to {0}.
MESSAGE_RUNNING_TRANSFORM=\ ** running OVAL Results xsl: {0}.
MESSAGE_SKIPPING_TRANSFORM=\ ** skipping OVAL Results xsl
MESSAGE_APPLYING_DIRECTIVES=\ ** applying directives to OVAL results.
MESSAGE_RUNNING_XMLVALIDATION=\ ** running XML-Schema validation on {0}
MESSAGE_RUNNING_SCHEMATRON=\ ** running Schematron validation on {0}
MESSAGE_SCHEMATRON_SUCCESS=\     - Schematron validation succeeded
MESSAGE_SKIPPING_SCHEMATRON=\ ** skipping Schematron validation
MESSAGE_READING_INPUTDEFINITIONS=\ ** reading input definition ids from {0}
MESSAGE_PARSING_INPUTDEFINITIONS=\ ** parsing input definition ids to evaluate
MESSAGE_HELPTEXT=Command Line: jovaldi [options] MD5Hash\
\n\
\nOptions:\
\n   -h           = show options available from command line.\
\n\
\nDefinition Evaluation Options:\
\n   -o <string>  = path to the oval-definitions xml file.\
\n                  DEFAULT="definitions.xml"\
\n   -v <string>  = path to external variable values file.\
\n                  DEFAULT="external-variables.xml"\
\n   -e <string>  = evaluate the specified list of definitions. Supply definition\
\n                  ids as a comma separated list like: oval:com.example:def:123\
\n   -f <string>  = path to a file containing a list of definitions to be\
\n                  evaluated. The file must comply with the evaluation-id\
\n                  schema.\
\n\
\nInput Validation Options:\
\n   -m           = do not verify the oval-definitions file with an MD5 hash.\
\n   -c <string>  = perform Schematron validation on the input OVAL Definitions.\
\n                  Path to an xsl may optionally be specified.\
\n                  DEFAULT="xml/oval-definitions-schematron.xsl"\
\n\
\nData Collection Options:\
\n   -a <string>  = path to the directory that contains the OVAL schema.\
\n                  DEFAULT="[install_dir]/xml"\
\n   -i <string>  = path to input System Characteristics file. Evaluation will be\
\n                  based on the contents of the file.\
\n\
\nResult Output Options:\
\n   -d <string>  = save data to the specified XML file.\
\n                  DEFAULT="system-characteristics.xml"\
\n   -g <string>  = path to the oval directives configuration file.\
\n                  DEFAULT="directives.xml"\
\n   -r <string>  = save results to the specified XML file.\
\n                  DEFAULT="results.xml"\
\n   -s           = do not apply a stylesheet to the results xml.\
\n   -t <string>  = apply the specified xsl to the results xml.\
\n                  DEFAULT="[xml_dir]/results_to_html.xsl"\
\n   -x <string>  = output xsl transform results to the specified file.\
\n                  DEFAULT="results.html"\
\n   -j <string>  = perform schema/schematron validation on the output OVAL\
\n                  System Characteristics. Path to an xsl may optionally be\
\n                  specified.\
\n                  DEFAULT="[xml_dir]/oval-system-characteristics-schematron.xsl"\
\n   -k <string>  = perform schema/schematron validation on the output OVAL\
\n                  Results. Path to an xsl may optionally be specified.\
\n                  DEFAULT="[xml_dir]/oval-results-schematron.xsl"\
\n\
\nOther Options:\
\n   -l <integer> = Log messages at the specified level. (DEBUG = 1, INFO = 2,\
\n                  MESSAGE = 3, FATAL = 4)\
\n   -p           = print all information and error messages.\
\n   -y <string>  = save the jovaldi.log file to a specific location.\
\n   -z           = return md5 of current oval-definitions file.\
\n\
\nPlugin Management Options:\
\n   -plugin <string>  = name of the jovaldi plugin to use for the scan. Valid\
\n                       choices are "default", "remote" and "offline".\
\n                       DEFAULT="default"\
\n   -config <string>  = configuration information for the plugin.  See plugin\
\n                       help for information on valid configuration parameters.\
\n                       (To see help for a specific plugin, use the -plugin\
\n                       <name> option to specify the desired plugin, followed by\
\n                       the -h option for help text).\
\n                       DEFAULT="config.properties"
